import os
from dotenv import load_dotenv
from groq import Client

load_dotenv()

# Load Groq API key
GROQ_API_KEY = os.getenv("GROQ_API_KEY")
if not GROQ_API_KEY:
    raise ValueError("Groq API key not found. Please set it in the .env file.")

# Initialize the Groq client
groq_client = Client(api_key=GROQ_API_KEY)

def get_bot_response(user_message: str) -> str:
    """
    Uses the Groq LLM to generate a response for the user message.

    Args:
        user_message (str): The message from the user.

    Returns:
        str: The response generated by the LLM.
    """
    # Define the payload for the Groq model
    payload = {
        "model": "llama3-8b-8192",
        "messages": [
            {"role": "system", "content": "You are an IT asset request assistant."},
            {"role": "user", "content": user_message},
        ],
    }

    # Call the Groq API
    try:
        response = groq_client.completions.create(**payload)
        return response.choices[0].message["content"]
    except Exception as e:
        print(f"Error calling Groq API: {e}")
        return "Sorry, I am unable to process your request at the moment. Please try again later."
